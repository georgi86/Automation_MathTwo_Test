///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Mathemeatics
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Action recording.
    /// </summary>
    [TestModule("99f745ec-010b-4a1d-b1b0-b36fcf692623", ModuleType.Recording, 1)]
    public partial class Action : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MathemeaticsRepository repository.
        /// </summary>
        public static MathemeaticsRepository repo = MathemeaticsRepository.Instance;

        static Action instance = new Action();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Action()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Action Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 500;
            Keyboard.DefaultKeyPressTime = 200;
            Delay.SpeedFactor = 1.00;

            Init();

            // Click somewhere in the TitleBar to get a focus on all options in the Menu Bar
            Report.Log(ReportLevel.Info, "Mouse", "Click somewhere in the TitleBar to get a focus on all options in the Menu Bar\r\nMouse Left Click item 'SnapXUntitled.SnapXUntitled' at 740;9.", repo.SnapXUntitled.SnapXUntitledInfo, new RecordItemIndex(0));
            repo.SnapXUntitled.SnapXUntitled.Click("740;9");
            Delay.Milliseconds(200);
            
            // "Alt" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"Alt\" Button\r\nKey sequence '{LMenu}'.", new RecordItemIndex(1));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);
            
            // "F" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"F\" Button\r\nKey sequence 'f'.", new RecordItemIndex(2));
            Keyboard.Press("f");
            Delay.Milliseconds(0);
            
            // "O" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"O\" Button\r\nKey sequence 'o'.", new RecordItemIndex(3));
            Keyboard.Press("o");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'OpenSnapXRoutine.Text1148' at 203;5.", repo.OpenSnapXRoutine.Text1148Info, new RecordItemIndex(4));
            repo.OpenSnapXRoutine.Text1148.DoubleClick("203;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Delete}' with focus on 'OpenSnapXRoutine.Text1148'.", repo.OpenSnapXRoutine.Text1148Info, new RecordItemIndex(5));
            repo.OpenSnapXRoutine.Text1148.PressKeys("{Delete}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'D:\\Joro\\GIT_Automations\\AutomationMathTwo\\Routine\\MathActions.mxy'.", new RecordItemIndex(6));
            Keyboard.Press("D:\\Joro\\GIT_Automations\\AutomationMathTwo\\Routine\\MathActions.mxy");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'OpenSnapXRoutine.Text1148'.", repo.OpenSnapXRoutine.Text1148Info, new RecordItemIndex(7));
            repo.OpenSnapXRoutine.Text1148.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            // Click somewhere in the TitleBar to get a focus on all options in the Menu Bar
            Report.Log(ReportLevel.Info, "Mouse", "Click somewhere in the TitleBar to get a focus on all options in the Menu Bar\r\nMouse Left Click item 'SnapXUntitled.SnapXUntitled' at 535;8.", repo.SnapXUntitled.SnapXUntitledInfo, new RecordItemIndex(8));
            repo.SnapXUntitled.SnapXUntitled.Click("535;8");
            Delay.Milliseconds(200);

            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu}'.", new RecordItemIndex(9));
            //Keyboard.Press("{LMenu}");
            //Delay.Milliseconds(0);

            // "Alt" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"Alt\" Button\r\nKey sequence '{LMenu}'.", new RecordItemIndex(1));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);

            // "F" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"F\" Button\r\nKey sequence 'f'.", new RecordItemIndex(2));
            Keyboard.Press("f");
            Delay.Milliseconds(0);

            // "R" Button
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'r'.", new RecordItemIndex(11));
            Keyboard.Press("r");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.ButtonOK' at 55;11.", repo.SnapXUntitled.ButtonOKInfo, new RecordItemIndex(12));
            repo.SnapXUntitled.ButtonOK.Click("55;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 25s.", new RecordItemIndex(13));
            Delay.Duration(25000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SnapXUntitled.Finish' at 41;11.", repo.SnapXUntitled.FinishInfo, new RecordItemIndex(14));
            repo.SnapXUntitled.Finish.Click("41;11");
            Delay.Milliseconds(200);

            // "Alt" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"Alt\" Button\r\nKey sequence '{LMenu}'.", new RecordItemIndex(1));
            Keyboard.Press("{LMenu}");
            Delay.Milliseconds(0);

            // "F" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"F\" Button\r\nKey sequence 'f'.", new RecordItemIndex(2));
            Keyboard.Press("f");
            Delay.Milliseconds(0);

            // "N" Button
            Report.Log(ReportLevel.Info, "Keyboard", "\"N\" Button\n\nKey sequence 'n'.", new RecordItemIndex(3));
            Keyboard.Press("n");
            Delay.Milliseconds(2000);            
            
            Report.Log(ReportLevel.Info, "Application", "Run application 'D:\\Joro\\GIT_Automations\\AutomationMathTwo\\Reports\\Math.STA' with arguments '' in normal mode.", new RecordItemIndex(16));
            Host.Local.RunApplication("D:\\Joro\\GIT_Automations\\AutomationMathTwo\\Reports\\Math.STA", "", "D:\\Joro\\AUTOMATION\\TESTS\\SnapX\\RegressinMathTwo\\Reports", false);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke Action", "Invoking Maximize() on item 'MathSTANotepad'.", repo.MathSTANotepad.SelfInfo, new RecordItemIndex(17));
            repo.MathSTANotepad.Self.Maximize();
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (WindowText='+270.0000 \r\n+2.5000 \r\n+7.5000 \r\n+2.0000 \r\n+5.0000 \r\n-1.0000 \r\n+179.0000 \r\n+1.0000 \r\n+1.0000 \r\n+180.0000 \r\n+10.0000 \r\n+5.0000 \r\n+5.0000 \r\n+1.0000 \r\n+5.0000 \r\n+12.0711 \r\n+7.5000 \r\n+12.5000 \r\n+14.1421 \r\n+25.0000 \r\n+7.0711 \r\n+10.0000 \r\n+7.5000 \r\n+8.0711 \r\n+3.5000 \r\n+5.0000 \r\n+5.0000 \r\n+5.0000 \r\n+10.0000 \r\n+0.0000 \r\n+10.0000 \r\n+5.0000 \r\n+2.5000 \r\n+275.0000 \r\n+12.0711 \r\n+7.5000 \r\n+7.5000 \r\n+6.0000 \r\n+4.0000 \r\n+5.0000 \r\n+5.0000 \r\n+22.5000 \r\n+10.0000 \r\n+5.0000 \r\n+22.5000 \r\n+7.5000 \r\n+6.0000 \r\n+9.0000 \r\n+23.5000 \r\n+10.0000 \r\n+27.5000 \r\n+5.0000 \r\n+12.0711 \r\n+30.0000 \r\n+2.5000 \r\n+10.0000 \r\n+22.5000 \r\n+5.0000 \r\n+125.0000 \r\n+65.0000 \r\n+10.0000 \r\n+90.0000 \r\n+30.0000 \r\n+10.0000 \r\n+97.0711 \r\n+37.5000 \r\n+7.5000 \r\n+91.0000 \r\n+31.0000 \r\n+6.0000 \r\n+95.0000 \r\n+30.0000 \r\n+10.0000 \r\n+52.5000 \r\n+5.0000 \r\n+125.0000 \r\n+10.0000 \r\n+47.5000 \r\n+10.0000 \r\n+90.0000 \r\n+5.0000 \r\n+10.0000 \r\n+270.0000 \r\n+97.0711 \r\n+12.5000 \r\n+7.5000 \r\n+91.0000 \r\n+6.0000 \r\n+38.5000 \r\n+95.0000 \r\n+5.0000 \r\n+42.5000 \r\n+5.0000 \r\n+90.0000 \r\n+95.0000 \r\n+27.5000 \r\n+60.0000 \r\n+10.0000 \r\n+180.0000 \r\n+35.0000 \r\n+67.5000 \r\n+5.0000 \r\n+180.0000 \r\n+10.0000 \r\n+75.0000 \r\n+5.0000 \r\n+12.5000 \r\n+15.0000 \r\n+50.0000 \r\n+10.0000 \r\n+12.5000 \r\n+10.0000 \r\n+42.5000 \r\n+7.5000 \r\n+19.5711 \r\n+17.5000 \r\n+47.5000 \r\n+7.5000 \r\n+13.5000 \r\n+11.0000 \r\n+41.0000 \r\n+9.0000 \r\n+17.5000 \r\n+10.0000 \r\n+45.0000 \r\n+5.0000 \r\n+17.5000 \r\n+32.5000 \r\n+62.5000 \r\n+10.0000 \r\n+102.5000 \r\n+40.0000 \r\n+70.0000 \r\n+10.0000 \r\n+102.5000 \r\n+15.0000 \r\n+77.5000 \r\n+10.0000 \r\n+25.0000 \r\n+20.0000 \r\n+85.0000 \r\n+10.0000 \r\n') on item 'MathSTANotepad.Text15'.", repo.MathSTANotepad.Text15Info, new RecordItemIndex(18));

            string results = ((Mathemeatics.MathemeaticsRepositoryFolders.MathSTANotepadAppFolder)repo.MathSTANotepad.Text15Info.ParentFolder).Text15.TextValue;
            string[] ReadResults = Regex.Split(results, "[\r\n]+");

            string HardcodedResults = "+270.0000 \r\n+2.5000 \r\n+7.5000 \r\n+2.0000 \r\n+5.0000 \r\n-1.0000 \r\n+179.0000 \r\n+1.0000 \r\n+1.0000 \r\n+180.0000 \r\n+10.0000 \r\n+5.0000 \r\n+5.0000 \r\n+1.0000 \r\n+5.0000 \r\n+12.0711 \r\n+7.5000 \r\n+12.5000 \r\n+14.1421 \r\n+25.0000 \r\n+7.0711 \r\n+10.0000 \r\n+7.5000 \r\n+8.0711 \r\n+3.5000 \r\n+5.0000 \r\n+5.0000 \r\n+5.0000 \r\n+10.0000 \r\n+0.0000 \r\n+10.0000 \r\n+5.0000 \r\n+2.5000 \r\n+275.0000 \r\n+12.0711 \r\n+7.5000 \r\n+7.5000 \r\n+6.0000 \r\n+4.0000 \r\n+5.0000 \r\n+5.0000 \r\n+22.5000 \r\n+10.0000 \r\n+5.0000 \r\n+22.5000 \r\n+7.5000 \r\n+6.0000 \r\n+9.0000 \r\n+23.5000 \r\n+10.0000 \r\n+27.5000 \r\n+5.0000 \r\n+12.0711 \r\n+30.0000 \r\n+2.5000 \r\n+10.0000 \r\n+22.5000 \r\n+5.0000 \r\n+125.0000 \r\n+65.0000 \r\n+10.0000 \r\n+90.0000 \r\n+30.0000 \r\n+10.0000 \r\n+97.0711 \r\n+37.5000 \r\n+7.5000 \r\n+91.0000 \r\n+31.0000 \r\n+6.0000 \r\n+95.0000 \r\n+30.0000 \r\n+10.0000 \r\n+52.5000 \r\n+5.0000 \r\n+125.0000 \r\n+10.0000 \r\n+47.5000 \r\n+10.0000 \r\n+90.0000 \r\n+5.0000 \r\n+10.0000 \r\n+270.0000 \r\n+97.0711 \r\n+12.5000 \r\n+7.5000 \r\n+91.0000 \r\n+6.0000 \r\n+38.5000 \r\n+95.0000 \r\n+5.0000 \r\n+42.5000 \r\n+5.0000 \r\n+90.0000 \r\n+95.0000 \r\n+27.5000 \r\n+60.0000 \r\n+10.0000 \r\n+180.0000 \r\n+35.0000 \r\n+67.5000 \r\n+5.0000 \r\n+180.0000 \r\n+10.0000 \r\n+75.0000 \r\n+5.0000 \r\n+12.5000 \r\n+15.0000 \r\n+50.0000 \r\n+10.0000 \r\n+12.5000 \r\n+10.0000 \r\n+42.5000 \r\n+7.5000 \r\n+19.5711 \r\n+17.5000 \r\n+47.5000 \r\n+7.5000 \r\n+13.5000 \r\n+11.0000 \r\n+41.0000 \r\n+9.0000 \r\n+17.5000 \r\n+10.0000 \r\n+45.0000 \r\n+5.0000 \r\n+17.5000 \r\n+32.5000 \r\n+62.5000 \r\n+10.0000 \r\n+102.5000 \r\n+40.0000 \r\n+70.0000 \r\n+10.0000 \r\n+102.5000 \r\n+15.0000 \r\n+77.5000 \r\n+10.0000 \r\n+25.0000 \r\n+20.0000 \r\n+85.0000 \r\n+10.0000 \r\n";
            string[] ReadHardcodedResults = Regex.Split(HardcodedResults, "[\r\n]+");

            int iResultsLine = ReadHardcodedResults.Length;

            bool bResultsOK = true;

            for (int i = 0; i < iResultsLine; i++)
            {
                bool bResultslineAreSame = ReadHardcodedResults[i].Equals(ReadResults[i]);

                if (!bResultslineAreSame)
                {
                    Ranorex.Report.Error(ReadResults[i]);
                    Ranorex.Report.Error("it should be ");
                    Ranorex.Report.Error(ReadHardcodedResults[i]);

                    bResultsOK = false;
                }

            } //for (int i = 0; i < iResultsLine; i++)

            if (bResultsOK)
            {
                Ranorex.Report.Success("The test was sucessfully performed");
            }
            Delay.Milliseconds(100);


            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'MathSTANotepad.Text15'.", repo.MathSTANotepad.Text15Info, new RecordItemIndex(19));
            Host.Current.CloseApplication(repo.MathSTANotepad.Text15, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
